const { resolve } = require('path');
const { readdir } = require('fs').promises;
const fs = require('fs');

async function getFiles(dir) {
    const dirents = await readdir(dir, { withFileTypes: true });
    const files = await Promise.all(dirents.map((dirent) => {
        const res = resolve(dir, dirent.name);
        return dirent.isDirectory() ? getFiles(res) : res;
    }));
    return Array.prototype.concat(...files);
}


fs.writeFileSync('StaticFiles.kt', '/* AUTOGENERATED. DO NOT EDIT. */ \n\n' +
    'var files: HashMap<String, String> = HashMap<String, String>()\n' +
    '\n' +
    '\n' +
    'class StaticFiles {\n' +
    '    fun getHex(key: String): String {\n' +
    '        return files.getOrDefault(key, "")\n' +
    '    }\n\n' +
    '    constructor() {\n');


console.error(__dirname);

getFiles(__dirname + '/gui')
    .then(files => {
        for (const file of files) {
            const key = file.replace(__dirname, '');
            if (!(key.endsWith('.js') || key.endsWith('.css') || key.endsWith('.html'))) continue;
            console.log(key);
            const hex = fs.readFileSync(file).toString('hex');
            // console.log(hex);

            fs.appendFileSync('StaticFiles.kt', `        files.put("${key}", "${hex}")\n`);
        }
        fs.appendFileSync('StaticFiles.kt', '    }\n' + '}\n');
        process.exit(0);
    })
    .catch(e => {
        console.error(e);
        process.exit(1);
    });